name: Deploy to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'yarn'
      - name: Setup Pages
        id: config_pages
        uses: actions/configure-pages@v4
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            playground/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build
        run: yarn build
        env:
          RPC_PROVIDER_URL_1: ${{ vars.RPC_PROVIDER_URL_1 }}
          RPC_PROVIDER_URL_5: ${{ vars.RPC_PROVIDER_URL_5 }}
          RPC_PROVIDER_URL_17000: ${{ vars.RPC_PROVIDER_URL_17000 }}
          WALLETCONNECT_PROJECT_ID: ${{ vars.WALLETCONNECT_PROJECT_ID }}
          SUPPORTED_CHAINS: ${{ vars.SUPPORTED_CHAINS }}
          DEFAULT_CHAIN: ${{ vars.DEFAULT_CHAIN }}
          BASE_PATH: ${{ steps.config_pages.outputs.base_path }}
      - name: Export
        run: yarn build:export
        env:
          NODE_NO_BUILD_DYNAMICS: true
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./playground/out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
